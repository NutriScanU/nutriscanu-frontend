{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Documents\\\\TP1\\\\Desarrollo\\\\Frontend\\\\nutriscanu-frontend\\\\src\\\\modules\\\\student\\\\pages\\\\BloodAnalysisForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./BloodAnalysisForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BloodAnalysisForm = ({\n  onSubmit,\n  initialData\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    age: \"\",\n    gender: \"\",\n    smoking_history: \"\",\n    bmi: \"\",\n    hbA1c: \"\",\n    blood_glucose_level: \"\",\n    hemoglobin: \"\",\n    insulin: \"\",\n    triglycerides: \"\",\n    hematocrit: \"\",\n    red_blood_cells: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  useEffect(() => {\n    if (initialData) setFormData(initialData);\n  }, [initialData]);\n  const ranges = {\n    age: {\n      min: 16,\n      max: 35\n    }\n  };\n  const fieldLabels = {\n    bmi: \"Índice de Masa Corporal (IMC)\",\n    hbA1c: \"Hemoglobina glicosilada (HbA1c %)\",\n    blood_glucose_level: \"Glucosa en sangre (mg/dL)\",\n    hemoglobin: \"Hemoglobina (g/dL)\",\n    insulin: \"Insulina (µU/mL)\",\n    triglycerides: \"Triglicéridos (mg/dL)\",\n    hematocrit: \"Hematocrito (%)\",\n    red_blood_cells: \"Glóbulos rojos (millones/μL)\"\n  };\n  const getHint = field => {\n    const range = ranges[field];\n    if (!range) return \"\";\n    if (typeof range === \"object\" && range.Male) {\n      if (!formData.gender) return \"\";\n      const {\n        min,\n        max\n      } = range[formData.gender];\n      return `Valor permitido: entre ${min} y ${max}`;\n    }\n    return `Valor permitido: entre ${range.min} y ${range.max}`;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"gender\") {\n      const updated = {\n        ...formData,\n        [name]: value\n      };\n      setFormData(updated);\n      if (submitted) validateAllFields(updated);\n    } else {\n      const updated = {\n        ...formData,\n        [name]: value\n      };\n      setFormData(updated);\n      validateField(name, value, formData.gender);\n    }\n  };\n  const validateField = (name, value, gender) => {\n    const range = ranges[name];\n    if (!range) return;\n    let min = range.min;\n    let max = range.max;\n    if (typeof range === \"object\" && range.Male && gender) {\n      var _range$gender, _range$gender2;\n      min = (_range$gender = range[gender]) === null || _range$gender === void 0 ? void 0 : _range$gender.min;\n      max = (_range$gender2 = range[gender]) === null || _range$gender2 === void 0 ? void 0 : _range$gender2.max;\n    }\n    const num = parseFloat(value);\n    if (!value) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: \"Falta llenar este campo\"\n      }));\n    } else if (isNaN(num)) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: \"Debe ser un número válido\"\n      }));\n    } else if (num < min || num > max) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: `Debe estar entre ${min} y ${max}`\n      }));\n    } else {\n      setErrors(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[name];\n        return copy;\n      });\n    }\n  };\n  const validateAllFields = data => {\n    const newErrors = {};\n    Object.entries(data).forEach(([key, value]) => {\n      const range = ranges[key];\n      if (!range) return;\n      let min = range.min;\n      let max = range.max;\n      if (typeof range === \"object\" && range.Male && data.gender) {\n        var _range$data$gender, _range$data$gender2;\n        min = (_range$data$gender = range[data.gender]) === null || _range$data$gender === void 0 ? void 0 : _range$data$gender.min;\n        max = (_range$data$gender2 = range[data.gender]) === null || _range$data$gender2 === void 0 ? void 0 : _range$data$gender2.max;\n      }\n      const num = parseFloat(value);\n      if (!value) {\n        newErrors[key] = \"Falta llenar este campo\";\n      } else if (isNaN(num)) {\n        newErrors[key] = \"Debe ser un número válido\";\n      } else if (num < min || num > max) {\n        newErrors[key] = `Debe estar entre ${min} y ${max}`;\n      }\n    });\n    setErrors(newErrors);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n    validateAllFields(formData);\n    if (Object.keys(errors).length === 0) {\n      onSubmit(formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"blood-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"blood-title\",\n      children: \"Formulario de An\\xE1lisis de Sangre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blood-form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"blood-label\",\n        children: [\"Edad:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"age\",\n          value: formData.age,\n          onChange: handleChange,\n          onWheel: e => e.target.blur(),\n          className: `blood-input ${errors.age ? \"error-input\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), errors.age ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blood-error-text\",\n          children: [\"\\u26A0\\uFE0F \", errors.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : getHint(\"age\") && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blood-hint-text\",\n          children: getHint(\"age\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blood-form-row-vertical\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"blood-inline-label\",\n        children: \"G\\xE9nero:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blood-radio-column\",\n        children: [\"Male\", \"Female\"].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"blood-radio-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"gender\",\n            value: option,\n            checked: formData.gender === option,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blood-radio-filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blood-radio-label\",\n            children: option === \"Male\" ? \"Masculino\" : \"Femenino\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), errors.gender && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blood-error-text\",\n        children: [\"\\u26A0\\uFE0F \", errors.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blood-form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"blood-label\",\n        children: [\"Historial de tabaquismo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"smoking_history\",\n          value: formData.smoking_history,\n          onChange: handleChange,\n          className: `blood-input ${errors.smoking_history ? \"error-input\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            hidden: true,\n            children: \"-- Selecciona --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Never\",\n            children: \"Nunca\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Current\",\n            children: \"Actualmente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Former\",\n            children: \"Anteriormente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ever\",\n            children: \"Alguna vez\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not Current\",\n            children: \"No actualmente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No Info\",\n            children: \"Prefiero no decirlo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), errors.smoking_history && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blood-error-text\",\n          children: [\"\\u26A0\\uFE0F \", errors.smoking_history]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blood-form-grid\",\n      children: Object.keys(fieldLabels).map(field => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"blood-label\",\n        children: [fieldLabels[field], \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: field,\n          step: \"0.1\",\n          value: formData[field],\n          onChange: handleChange,\n          onWheel: e => e.target.blur(),\n          className: `blood-input ${errors[field] ? \"error-input\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), errors[field] ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blood-error-text\",\n          children: [\"\\u26A0\\uFE0F \", errors[field]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this) : getHint(field) && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blood-hint-text\",\n          children: getHint(field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(BloodAnalysisForm, \"tMJbHHYHnacrinfr+yFpLQ1F/u0=\");\n_c = BloodAnalysisForm;\nexport default BloodAnalysisForm;\nvar _c;\n$RefreshReg$(_c, \"BloodAnalysisForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BloodAnalysisForm","onSubmit","initialData","_s","formData","setFormData","age","gender","smoking_history","bmi","hbA1c","blood_glucose_level","hemoglobin","insulin","triglycerides","hematocrit","red_blood_cells","errors","setErrors","submitted","setSubmitted","ranges","min","max","fieldLabels","getHint","field","range","Male","handleChange","e","name","value","target","updated","validateAllFields","validateField","_range$gender","_range$gender2","num","parseFloat","prev","isNaN","copy","data","newErrors","Object","entries","forEach","key","_range$data$gender","_range$data$gender2","handleSubmit","preventDefault","keys","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onWheel","blur","map","option","checked","disabled","hidden","step","_c","$RefreshReg$"],"sources":["C:/Users/Alexander/Documents/TP1/Desarrollo/Frontend/nutriscanu-frontend/src/modules/student/pages/BloodAnalysisForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./BloodAnalysisForm.css\";\r\n\r\nconst BloodAnalysisForm = ({ onSubmit, initialData }) => {\r\n  const [formData, setFormData] = useState({\r\n    age: \"\",\r\n    gender: \"\",\r\n    smoking_history: \"\",\r\n    bmi: \"\",\r\n    hbA1c: \"\",\r\n    blood_glucose_level: \"\",\r\n    hemoglobin: \"\",\r\n    insulin: \"\",\r\n    triglycerides: \"\",\r\n    hematocrit: \"\",\r\n    red_blood_cells: \"\"\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (initialData) setFormData(initialData);\r\n  }, [initialData]);\r\n\r\n  const ranges = {\r\n    age: { min: 16, max: 35 },\r\n\r\n  };\r\n\r\n  const fieldLabels = {\r\n    bmi: \"Índice de Masa Corporal (IMC)\",\r\n    hbA1c: \"Hemoglobina glicosilada (HbA1c %)\",\r\n    blood_glucose_level: \"Glucosa en sangre (mg/dL)\",\r\n    hemoglobin: \"Hemoglobina (g/dL)\",\r\n    insulin: \"Insulina (µU/mL)\",\r\n    triglycerides: \"Triglicéridos (mg/dL)\",\r\n    hematocrit: \"Hematocrito (%)\",\r\n    red_blood_cells: \"Glóbulos rojos (millones/μL)\"\r\n  };\r\n\r\n  const getHint = (field) => {\r\n    const range = ranges[field];\r\n    if (!range) return \"\";\r\n\r\n    if (typeof range === \"object\" && range.Male) {\r\n      if (!formData.gender) return \"\";\r\n      const { min, max } = range[formData.gender];\r\n      return `Valor permitido: entre ${min} y ${max}`;\r\n    }\r\n\r\n    return `Valor permitido: entre ${range.min} y ${range.max}`;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"gender\") {\r\n      const updated = { ...formData, [name]: value };\r\n      setFormData(updated);\r\n      if (submitted) validateAllFields(updated);\r\n    } else {\r\n      const updated = { ...formData, [name]: value };\r\n      setFormData(updated);\r\n      validateField(name, value, formData.gender);\r\n    }\r\n  };\r\n\r\n  const validateField = (name, value, gender) => {\r\n    const range = ranges[name];\r\n    if (!range) return;\r\n\r\n    let min = range.min;\r\n    let max = range.max;\r\n\r\n    if (typeof range === \"object\" && range.Male && gender) {\r\n      min = range[gender]?.min;\r\n      max = range[gender]?.max;\r\n    }\r\n\r\n    const num = parseFloat(value);\r\n\r\n    if (!value) {\r\n      setErrors((prev) => ({ ...prev, [name]: \"Falta llenar este campo\" }));\r\n    } else if (isNaN(num)) {\r\n      setErrors((prev) => ({ ...prev, [name]: \"Debe ser un número válido\" }));\r\n    } else if (num < min || num > max) {\r\n      setErrors((prev) => ({ ...prev, [name]: `Debe estar entre ${min} y ${max}` }));\r\n    } else {\r\n      setErrors((prev) => {\r\n        const copy = { ...prev };\r\n        delete copy[name];\r\n        return copy;\r\n      });\r\n    }\r\n  };\r\n\r\n  const validateAllFields = (data) => {\r\n    const newErrors = {};\r\n\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      const range = ranges[key];\r\n      if (!range) return;\r\n\r\n      let min = range.min;\r\n      let max = range.max;\r\n\r\n      if (typeof range === \"object\" && range.Male && data.gender) {\r\n        min = range[data.gender]?.min;\r\n        max = range[data.gender]?.max;\r\n      }\r\n\r\n      const num = parseFloat(value);\r\n\r\n      if (!value) {\r\n        newErrors[key] = \"Falta llenar este campo\";\r\n      } else if (isNaN(num)) {\r\n        newErrors[key] = \"Debe ser un número válido\";\r\n      } else if (num < min || num > max) {\r\n        newErrors[key] = `Debe estar entre ${min} y ${max}`;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    validateAllFields(formData);\r\n    if (Object.keys(errors).length === 0) {\r\n      onSubmit(formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"blood-form\" onSubmit={handleSubmit}>\r\n      <h3 className=\"blood-title\">Formulario de Análisis de Sangre</h3>\r\n\r\n      <div className=\"blood-form-group\">\r\n        <label className=\"blood-label\">\r\n          Edad:\r\n          <input\r\n            type=\"number\"\r\n            name=\"age\"\r\n            value={formData.age}\r\n            onChange={handleChange}\r\n            onWheel={(e) => e.target.blur()}\r\n            className={`blood-input ${errors.age ? \"error-input\" : \"\"}`}\r\n          />\r\n          {errors.age ? (\r\n            <span className=\"blood-error-text\">⚠️ {errors.age}</span>\r\n          ) : (\r\n            getHint(\"age\") && <span className=\"blood-hint-text\">{getHint(\"age\")}</span>\r\n          )}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"blood-form-row-vertical\">\r\n        <label className=\"blood-inline-label\">Género:</label>\r\n        <div className=\"blood-radio-column\">\r\n          {[\"Male\", \"Female\"].map((option) => (\r\n            <label key={option} className=\"blood-radio-option\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"gender\"\r\n                value={option}\r\n                checked={formData.gender === option}\r\n                onChange={handleChange}\r\n              />\r\n              <span className=\"blood-radio-filled\"></span>\r\n              <span className=\"blood-radio-label\">\r\n                {option === \"Male\" ? \"Masculino\" : \"Femenino\"}\r\n              </span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n        {errors.gender && <span className=\"blood-error-text\">⚠️ {errors.gender}</span>}\r\n      </div>\r\n\r\n      <div className=\"blood-form-group\">\r\n        <label className=\"blood-label\">\r\n          Historial de tabaquismo:\r\n          <select\r\n            name=\"smoking_history\"\r\n            value={formData.smoking_history}\r\n            onChange={handleChange}\r\n            className={`blood-input ${errors.smoking_history ? \"error-input\" : \"\"}`}\r\n          >\r\n            <option value=\"\" disabled hidden>-- Selecciona --</option>\r\n            <option value=\"Never\">Nunca</option>\r\n            <option value=\"Current\">Actualmente</option>\r\n            <option value=\"Former\">Anteriormente</option>\r\n            <option value=\"Ever\">Alguna vez</option>\r\n            <option value=\"Not Current\">No actualmente</option>\r\n            <option value=\"No Info\">Prefiero no decirlo</option>\r\n          </select>\r\n          {errors.smoking_history && (\r\n            <span className=\"blood-error-text\">⚠️ {errors.smoking_history}</span>\r\n          )}\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"blood-form-grid\">\r\n        {Object.keys(fieldLabels).map((field) => (\r\n          <label key={field} className=\"blood-label\">\r\n            {fieldLabels[field]}:\r\n            <input\r\n              type=\"number\"\r\n              name={field}\r\n              step=\"0.1\"\r\n              value={formData[field]}\r\n              onChange={handleChange}\r\n              onWheel={(e) => e.target.blur()}\r\n              className={`blood-input ${errors[field] ? \"error-input\" : \"\"}`}\r\n            />\r\n            {errors[field] ? (\r\n              <span className=\"blood-error-text\">⚠️ {errors[field]}</span>\r\n            ) : (\r\n              getHint(field) && <span className=\"blood-hint-text\">{getHint(field)}</span>\r\n            )}\r\n          </label>\r\n        ))}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BloodAnalysisForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,EAAE;IACnBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,mBAAmB,EAAE,EAAE;IACvBC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE;EACnB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIK,WAAW,EAAEG,WAAW,CAACH,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMmB,MAAM,GAAG;IACbf,GAAG,EAAE;MAAEgB,GAAG,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAG;EAE1B,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBf,GAAG,EAAE,+BAA+B;IACpCC,KAAK,EAAE,mCAAmC;IAC1CC,mBAAmB,EAAE,2BAA2B;IAChDC,UAAU,EAAE,oBAAoB;IAChCC,OAAO,EAAE,kBAAkB;IAC3BC,aAAa,EAAE,uBAAuB;IACtCC,UAAU,EAAE,iBAAiB;IAC7BC,eAAe,EAAE;EACnB,CAAC;EAED,MAAMS,OAAO,GAAIC,KAAK,IAAK;IACzB,MAAMC,KAAK,GAAGN,MAAM,CAACK,KAAK,CAAC;IAC3B,IAAI,CAACC,KAAK,EAAE,OAAO,EAAE;IAErB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,IAAI,EAAE;MAC3C,IAAI,CAACxB,QAAQ,CAACG,MAAM,EAAE,OAAO,EAAE;MAC/B,MAAM;QAAEe,GAAG;QAAEC;MAAI,CAAC,GAAGI,KAAK,CAACvB,QAAQ,CAACG,MAAM,CAAC;MAC3C,OAAO,0BAA0Be,GAAG,MAAMC,GAAG,EAAE;IACjD;IAEA,OAAO,0BAA0BI,KAAK,CAACL,GAAG,MAAMK,KAAK,CAACJ,GAAG,EAAE;EAC7D,CAAC;EAED,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEhC,IAAIF,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMG,OAAO,GAAG;QAAE,GAAG9B,QAAQ;QAAE,CAAC2B,IAAI,GAAGC;MAAM,CAAC;MAC9C3B,WAAW,CAAC6B,OAAO,CAAC;MACpB,IAAIf,SAAS,EAAEgB,iBAAiB,CAACD,OAAO,CAAC;IAC3C,CAAC,MAAM;MACL,MAAMA,OAAO,GAAG;QAAE,GAAG9B,QAAQ;QAAE,CAAC2B,IAAI,GAAGC;MAAM,CAAC;MAC9C3B,WAAW,CAAC6B,OAAO,CAAC;MACpBE,aAAa,CAACL,IAAI,EAAEC,KAAK,EAAE5B,QAAQ,CAACG,MAAM,CAAC;IAC7C;EACF,CAAC;EAED,MAAM6B,aAAa,GAAGA,CAACL,IAAI,EAAEC,KAAK,EAAEzB,MAAM,KAAK;IAC7C,MAAMoB,KAAK,GAAGN,MAAM,CAACU,IAAI,CAAC;IAC1B,IAAI,CAACJ,KAAK,EAAE;IAEZ,IAAIL,GAAG,GAAGK,KAAK,CAACL,GAAG;IACnB,IAAIC,GAAG,GAAGI,KAAK,CAACJ,GAAG;IAEnB,IAAI,OAAOI,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,IAAI,IAAIrB,MAAM,EAAE;MAAA,IAAA8B,aAAA,EAAAC,cAAA;MACrDhB,GAAG,IAAAe,aAAA,GAAGV,KAAK,CAACpB,MAAM,CAAC,cAAA8B,aAAA,uBAAbA,aAAA,CAAef,GAAG;MACxBC,GAAG,IAAAe,cAAA,GAAGX,KAAK,CAACpB,MAAM,CAAC,cAAA+B,cAAA,uBAAbA,cAAA,CAAef,GAAG;IAC1B;IAEA,MAAMgB,GAAG,GAAGC,UAAU,CAACR,KAAK,CAAC;IAE7B,IAAI,CAACA,KAAK,EAAE;MACVd,SAAS,CAAEuB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACV,IAAI,GAAG;MAA0B,CAAC,CAAC,CAAC;IACvE,CAAC,MAAM,IAAIW,KAAK,CAACH,GAAG,CAAC,EAAE;MACrBrB,SAAS,CAAEuB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACV,IAAI,GAAG;MAA4B,CAAC,CAAC,CAAC;IACzE,CAAC,MAAM,IAAIQ,GAAG,GAAGjB,GAAG,IAAIiB,GAAG,GAAGhB,GAAG,EAAE;MACjCL,SAAS,CAAEuB,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACV,IAAI,GAAG,oBAAoBT,GAAG,MAAMC,GAAG;MAAG,CAAC,CAAC,CAAC;IAChF,CAAC,MAAM;MACLL,SAAS,CAAEuB,IAAI,IAAK;QAClB,MAAME,IAAI,GAAG;UAAE,GAAGF;QAAK,CAAC;QACxB,OAAOE,IAAI,CAACZ,IAAI,CAAC;QACjB,OAAOY,IAAI;MACb,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMR,iBAAiB,GAAIS,IAAI,IAAK;IAClC,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpBC,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACI,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEjB,KAAK,CAAC,KAAK;MAC7C,MAAML,KAAK,GAAGN,MAAM,CAAC4B,GAAG,CAAC;MACzB,IAAI,CAACtB,KAAK,EAAE;MAEZ,IAAIL,GAAG,GAAGK,KAAK,CAACL,GAAG;MACnB,IAAIC,GAAG,GAAGI,KAAK,CAACJ,GAAG;MAEnB,IAAI,OAAOI,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,IAAI,IAAIgB,IAAI,CAACrC,MAAM,EAAE;QAAA,IAAA2C,kBAAA,EAAAC,mBAAA;QAC1D7B,GAAG,IAAA4B,kBAAA,GAAGvB,KAAK,CAACiB,IAAI,CAACrC,MAAM,CAAC,cAAA2C,kBAAA,uBAAlBA,kBAAA,CAAoB5B,GAAG;QAC7BC,GAAG,IAAA4B,mBAAA,GAAGxB,KAAK,CAACiB,IAAI,CAACrC,MAAM,CAAC,cAAA4C,mBAAA,uBAAlBA,mBAAA,CAAoB5B,GAAG;MAC/B;MAEA,MAAMgB,GAAG,GAAGC,UAAU,CAACR,KAAK,CAAC;MAE7B,IAAI,CAACA,KAAK,EAAE;QACVa,SAAS,CAACI,GAAG,CAAC,GAAG,yBAAyB;MAC5C,CAAC,MAAM,IAAIP,KAAK,CAACH,GAAG,CAAC,EAAE;QACrBM,SAAS,CAACI,GAAG,CAAC,GAAG,2BAA2B;MAC9C,CAAC,MAAM,IAAIV,GAAG,GAAGjB,GAAG,IAAIiB,GAAG,GAAGhB,GAAG,EAAE;QACjCsB,SAAS,CAACI,GAAG,CAAC,GAAG,oBAAoB3B,GAAG,MAAMC,GAAG,EAAE;MACrD;IACF,CAAC,CAAC;IAEFL,SAAS,CAAC2B,SAAS,CAAC;EACtB,CAAC;EAED,MAAMO,YAAY,GAAItB,CAAC,IAAK;IAC1BA,CAAC,CAACuB,cAAc,CAAC,CAAC;IAClBjC,YAAY,CAAC,IAAI,CAAC;IAClBe,iBAAiB,CAAC/B,QAAQ,CAAC;IAC3B,IAAI0C,MAAM,CAACQ,IAAI,CAACrC,MAAM,CAAC,CAACsC,MAAM,KAAK,CAAC,EAAE;MACpCtD,QAAQ,CAACG,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,oBACEL,OAAA;IAAMyD,SAAS,EAAC,YAAY;IAACvD,QAAQ,EAAEmD,YAAa;IAAAK,QAAA,gBAClD1D,OAAA;MAAIyD,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjE9D,OAAA;MAAKyD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B1D,OAAA;QAAOyD,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,OAE7B,eAAA1D,OAAA;UACE+D,IAAI,EAAC,QAAQ;UACb/B,IAAI,EAAC,KAAK;UACVC,KAAK,EAAE5B,QAAQ,CAACE,GAAI;UACpByD,QAAQ,EAAElC,YAAa;UACvBmC,OAAO,EAAGlC,CAAC,IAAKA,CAAC,CAACG,MAAM,CAACgC,IAAI,CAAC,CAAE;UAChCT,SAAS,EAAE,eAAevC,MAAM,CAACX,GAAG,GAAG,aAAa,GAAG,EAAE;QAAG;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,EACD5C,MAAM,CAACX,GAAG,gBACTP,OAAA;UAAMyD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,eAAG,EAACxC,MAAM,CAACX,GAAG;QAAA;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,GAEzDpC,OAAO,CAAC,KAAK,CAAC,iBAAI1B,OAAA;UAAMyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEhC,OAAO,CAAC,KAAK;QAAC;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAC3E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtC1D,OAAA;QAAOyD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrD9D,OAAA;QAAKyD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChC,CAAC,MAAM,EAAE,QAAQ,CAAC,CAACS,GAAG,CAAEC,MAAM,iBAC7BpE,OAAA;UAAoByD,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAChD1D,OAAA;YACE+D,IAAI,EAAC,OAAO;YACZ/B,IAAI,EAAC,QAAQ;YACbC,KAAK,EAAEmC,MAAO;YACdC,OAAO,EAAEhE,QAAQ,CAACG,MAAM,KAAK4D,MAAO;YACpCJ,QAAQ,EAAElC;UAAa;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACF9D,OAAA;YAAMyD,SAAS,EAAC;UAAoB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5C9D,OAAA;YAAMyD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAChCU,MAAM,KAAK,MAAM,GAAG,WAAW,GAAG;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA,GAXGM,MAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYX,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EACL5C,MAAM,CAACV,MAAM,iBAAIR,OAAA;QAAMyD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,GAAC,eAAG,EAACxC,MAAM,CAACV,MAAM;MAAA;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B1D,OAAA;QAAOyD,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,0BAE7B,eAAA1D,OAAA;UACEgC,IAAI,EAAC,iBAAiB;UACtBC,KAAK,EAAE5B,QAAQ,CAACI,eAAgB;UAChCuD,QAAQ,EAAElC,YAAa;UACvB2B,SAAS,EAAE,eAAevC,MAAM,CAACT,eAAe,GAAG,aAAa,GAAG,EAAE,EAAG;UAAAiD,QAAA,gBAExE1D,OAAA;YAAQiC,KAAK,EAAC,EAAE;YAACqC,QAAQ;YAACC,MAAM;YAAAb,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1D9D,OAAA;YAAQiC,KAAK,EAAC,OAAO;YAAAyB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpC9D,OAAA;YAAQiC,KAAK,EAAC,SAAS;YAAAyB,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C9D,OAAA;YAAQiC,KAAK,EAAC,QAAQ;YAAAyB,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7C9D,OAAA;YAAQiC,KAAK,EAAC,MAAM;YAAAyB,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC9D,OAAA;YAAQiC,KAAK,EAAC,aAAa;YAAAyB,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnD9D,OAAA;YAAQiC,KAAK,EAAC,SAAS;YAAAyB,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,EACR5C,MAAM,CAACT,eAAe,iBACrBT,OAAA;UAAMyD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,eAAG,EAACxC,MAAM,CAACT,eAAe;QAAA;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACrE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEN9D,OAAA;MAAKyD,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BX,MAAM,CAACQ,IAAI,CAAC9B,WAAW,CAAC,CAAC0C,GAAG,CAAExC,KAAK,iBAClC3B,OAAA;QAAmByD,SAAS,EAAC,aAAa;QAAAC,QAAA,GACvCjC,WAAW,CAACE,KAAK,CAAC,EAAC,GACpB,eAAA3B,OAAA;UACE+D,IAAI,EAAC,QAAQ;UACb/B,IAAI,EAAEL,KAAM;UACZ6C,IAAI,EAAC,KAAK;UACVvC,KAAK,EAAE5B,QAAQ,CAACsB,KAAK,CAAE;UACvBqC,QAAQ,EAAElC,YAAa;UACvBmC,OAAO,EAAGlC,CAAC,IAAKA,CAAC,CAACG,MAAM,CAACgC,IAAI,CAAC,CAAE;UAChCT,SAAS,EAAE,eAAevC,MAAM,CAACS,KAAK,CAAC,GAAG,aAAa,GAAG,EAAE;QAAG;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,EACD5C,MAAM,CAACS,KAAK,CAAC,gBACZ3B,OAAA;UAAMyD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,GAAC,eAAG,EAACxC,MAAM,CAACS,KAAK,CAAC;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,GAE5DpC,OAAO,CAACC,KAAK,CAAC,iBAAI3B,OAAA;UAAMyD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEhC,OAAO,CAACC,KAAK;QAAC;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAC3E;MAAA,GAfSnC,KAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC1D,EAAA,CA/NIH,iBAAiB;AAAAwE,EAAA,GAAjBxE,iBAAiB;AAiOvB,eAAeA,iBAAiB;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}