{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexander\\\\Documents\\\\TP1\\\\Desarrollo\\\\Frontend\\\\nutriscanu-frontend\\\\src\\\\modules\\\\student\\\\pages\\\\Recommendations.jsx\",\n  _s = $RefreshSig$();\n// src/modules/student/pages/Recommendations.jsx\n\nimport React, { useState } from \"react\";\nimport { API_URL, BACKEND_FLASK_URL } from \"../../../config\"; // ‚úÖ Usar API_URL y BACKEND_FLASK_URL\nimport RecommendationForm from \"./RecommendationForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Recommendations = () => {\n  _s();\n  const [recomendaciones, setRecomendaciones] = useState([]);\n  const [mensaje, setMensaje] = useState(\"\");\n\n  // Condici√≥n desde localStorage (debe haberse guardado en AnalysisStatus.jsx)\n  const condicion = localStorage.getItem(\"condicion_predicha\");\n  const handleSubmit = async respuestasHabitos => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      // Paso 1: Pedir recomendaciones al backend Flask\n      const input = [condicion, ...respuestasHabitos];\n      const response = await fetch(`${BACKEND_FLASK_URL}/recommend`, {\n        // ‚úÖ Usar BACKEND_FLASK_URL\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          input\n        })\n      });\n      const data = await response.json();\n      console.log(\"üì• Recomendaciones del modelo:\", data);\n      if (!response.ok) {\n        setMensaje(\"‚ùå Error al generar recomendaciones.\");\n        return;\n      }\n      const recomendacionesGeneradas = data.recommendations || [];\n      setRecomendaciones(recomendacionesGeneradas);\n      setMensaje(\"‚úÖ Recomendaci√≥n generada correctamente.\");\n\n      // Paso 2: Enviar recomendaciones al backend FastAPI para guardar en BD\n      const saveResponse = await fetch(`${API_URL}/api/students/analyze-recommendation`, {\n        // ‚úÖ Usar API_URL\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          condition: condicion,\n          recommendations: recomendacionesGeneradas,\n          habits: {\n            comidas_dia: respuestasHabitos[0],\n            frutas_verduras: respuestasHabitos[1],\n            alergias: respuestasHabitos[2],\n            bebidas_azucaradas: respuestasHabitos[3],\n            actividad_fisica: respuestasHabitos[4],\n            objetivo_alimentacion: respuestasHabitos[5],\n            ultraprocesados: respuestasHabitos[6],\n            estres: respuestasHabitos[7],\n            energia_fatiga: respuestasHabitos[8],\n            comidas_fuera: respuestasHabitos[9]\n          }\n        })\n      });\n      const saveResult = await saveResponse.json();\n      console.log(\"üì¶ Respuesta al guardar en BD:\", saveResult);\n      if (!saveResponse.ok) {\n        alert(\"‚ùå Error al guardar en base de datos: \" + (saveResult.detail || \"\"));\n      }\n    } catch (error) {\n      console.error(\"‚ùå Error general:\", error);\n      setMensaje(\"‚ùå Error de conexi√≥n.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 700,\n      margin: \"auto\",\n      paddingTop: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recomendaciones Alimenticias Personalizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecommendationForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), mensaje && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: \"1rem\",\n        color: mensaje.includes(\"‚úÖ\") ? \"green\" : \"red\"\n      },\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), recomendaciones.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF4E Tus recomendaciones son:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recomendaciones.map((rec, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: rec\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Recommendations, \"W2Mx7ZezsGUYoVaKUqV7vzU+aqs=\");\n_c = Recommendations;\nexport default Recommendations;\nvar _c;\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"names":["React","useState","API_URL","BACKEND_FLASK_URL","RecommendationForm","jsxDEV","_jsxDEV","Recommendations","_s","recomendaciones","setRecomendaciones","mensaje","setMensaje","condicion","localStorage","getItem","handleSubmit","respuestasHabitos","token","input","response","fetch","method","headers","Authorization","body","JSON","stringify","data","json","console","log","ok","recomendacionesGeneradas","recommendations","saveResponse","condition","habits","comidas_dia","frutas_verduras","alergias","bebidas_azucaradas","actividad_fisica","objetivo_alimentacion","ultraprocesados","estres","energia_fatiga","comidas_fuera","saveResult","alert","detail","error","style","maxWidth","margin","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginTop","color","includes","length","map","rec","idx","_c","$RefreshReg$"],"sources":["C:/Users/Alexander/Documents/TP1/Desarrollo/Frontend/nutriscanu-frontend/src/modules/student/pages/Recommendations.jsx"],"sourcesContent":["// src/modules/student/pages/Recommendations.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport { API_URL, BACKEND_FLASK_URL } from \"../../../config\";  // ‚úÖ Usar API_URL y BACKEND_FLASK_URL\r\nimport RecommendationForm from \"./RecommendationForm\";\r\n\r\nconst Recommendations = () => {\r\n  const [recomendaciones, setRecomendaciones] = useState([]);\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n\r\n  // Condici√≥n desde localStorage (debe haberse guardado en AnalysisStatus.jsx)\r\n  const condicion = localStorage.getItem(\"condicion_predicha\");\r\n\r\n  const handleSubmit = async (respuestasHabitos) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      // Paso 1: Pedir recomendaciones al backend Flask\r\n      const input = [condicion, ...respuestasHabitos];\r\n      const response = await fetch(`${BACKEND_FLASK_URL}/recommend`, {  // ‚úÖ Usar BACKEND_FLASK_URL\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ input }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"üì• Recomendaciones del modelo:\", data);\r\n\r\n      if (!response.ok) {\r\n        setMensaje(\"‚ùå Error al generar recomendaciones.\");\r\n        return;\r\n      }\r\n\r\n      const recomendacionesGeneradas = data.recommendations || [];\r\n      setRecomendaciones(recomendacionesGeneradas);\r\n      setMensaje(\"‚úÖ Recomendaci√≥n generada correctamente.\");\r\n\r\n      // Paso 2: Enviar recomendaciones al backend FastAPI para guardar en BD\r\n      const saveResponse = await fetch(`${API_URL}/api/students/analyze-recommendation`, {  // ‚úÖ Usar API_URL\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({\r\n          condition: condicion,\r\n          recommendations: recomendacionesGeneradas,\r\n          habits: {\r\n            comidas_dia: respuestasHabitos[0],\r\n            frutas_verduras: respuestasHabitos[1],\r\n            alergias: respuestasHabitos[2],\r\n            bebidas_azucaradas: respuestasHabitos[3],\r\n            actividad_fisica: respuestasHabitos[4],\r\n            objetivo_alimentacion: respuestasHabitos[5],\r\n            ultraprocesados: respuestasHabitos[6],\r\n            estres: respuestasHabitos[7],\r\n            energia_fatiga: respuestasHabitos[8],\r\n            comidas_fuera: respuestasHabitos[9],\r\n          },\r\n        }),\r\n      });\r\n\r\n      const saveResult = await saveResponse.json();\r\n      console.log(\"üì¶ Respuesta al guardar en BD:\", saveResult);\r\n\r\n      if (!saveResponse.ok) {\r\n        alert(\"‚ùå Error al guardar en base de datos: \" + (saveResult.detail || \"\"));\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"‚ùå Error general:\", error);\r\n      setMensaje(\"‚ùå Error de conexi√≥n.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 700, margin: \"auto\", paddingTop: \"2rem\" }}>\r\n      <h2>Recomendaciones Alimenticias Personalizadas</h2>\r\n\r\n      <RecommendationForm onSubmit={handleSubmit} />\r\n\r\n      {mensaje && (\r\n        <p style={{ marginTop: \"1rem\", color: mensaje.includes(\"‚úÖ\") ? \"green\" : \"red\" }}>\r\n          {mensaje}\r\n        </p>\r\n      )}\r\n\r\n      {recomendaciones.length > 0 && (\r\n        <div style={{ marginTop: \"1rem\" }}>\r\n          <h3>üçé Tus recomendaciones son:</h3>\r\n          <ul>\r\n            {recomendaciones.map((rec, idx) => (\r\n              <li key={idx}>{rec}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}